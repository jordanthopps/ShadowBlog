@using ShadowBlog.Models
@using ShadowBlog.Services.Interfaces
@using Microsoft.AspNetCore.Identity
@using ShadowBlog.Enums
@inject IImageService _imageService
@inject UserManager<BlogUser> _userManager
@model ShadowBlog.Models.BlogPost

@{
    ViewData["Title"] = "Details";
}

<!-- latest post Area Start-->
<section class="latest-post-area pd-bottom-100">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="blog-post-item-wrap mb-3">
                    <div class="thumb pd-bottom-45">
                        <img class="w-100" src="assets/img/post/single.jpg" alt="img">
                    </div>
                    <div class="row justify-content-center">
                        <div class="col-lg-10">
                            <div class="post-content text-center pt-0 mb-4">
                                <h2><a href="#">@Model.Title</a></h2>
                                <div class="post-meta">
                                    <ul>
                                        <li>By</li>
                                        <li><a href="https://jordanthopps.netlify.app/#about" target="_blank">Jordan Hopps</a></li>
                                        <li>@Model.Created.ToString("MMM dd, yyyy")</li>
                                    </ul>
                                </div>
                            </div>
                            @Html.Raw(Model.Content)
                        </div>
                    </div>
                </div>
                <div class="row justify-content-center">
                    <div class="col-lg-10">
                        <div class="single-post-footer">
                            <div class="row">
                                <div class="col-lg-6 col-md-4 col-sm-5">
                                    <ul class="social-area">
                                        <li><a href="https://github.com/jordanthopps"><i class="fab fa-github"></i></a></li>
                                        <li><a href="https://www.linkedin.com/in/jordanhopps"><i class="fab fa-linkedin-in"></i></a></li>
                                    </ul>
                                </div>
                                <div class="col-lg-6 col-md-8 col-sm-7 text-sm-end">
                                    <div class="tag-inner">
                                        @foreach (var tag in Model.Tags)
                                        {
                                            <a asp-action="TagIndex" asp-route-tag="@tag.Text" >#@tag.Text</a>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="comments-inner-wrap">
                            <h3 class="comments-title mt-5">Leave A Reply</h3>
                            <!-- COMMENT FORM -->
                            @if (User.Identity.IsAuthenticated)
                            {
                                <form class="comment-form" asp-controller="Comments" asp-action="Create">
                                    <div class="form-group">
                                        <input type="hidden" name="BlogPostId" value="@Model.Id" />
                                        <input type="hidden" name="Slug" value="@Model.Slug" />
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="single-input-wrap d-flex w-100">
                                                    <textarea name="CommentBody" rows="5" placeholder="ADD A COMMENT"></textarea>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <input type="submit" value="Post Comment" class="submit-btn btn btn-base">
                                            </div>
                                        </div>
                                    </div>
                                </form>
                                <div class="row">
                                    <h2>Comments</h2>
                                    @foreach (var comment in Model.Comments.OrderByDescending(c => c.Created))
                                    {
                                        <div class="offset-1 col-10">
                                            <div class="media mb-2">
                                                @if (comment.Moderated is not null)
                                                {
                                                    <h5 class="mt-0">Moderated by @comment.Moderator.FullName on @comment.Moderated?.ToString("MMM dd, yyyy")</h5>
                                                    <h6 class="mt-0"><i>Moderated reason: @comment.ModerationType</i></h6>
                                                    <p>@comment.ModeratedBody</p>
                                                }
                                                else if (comment.Updated is not null)
                                                {
                                                    <h5 class="mt-0">Updated by @comment.BlogUser.FullName on @comment.Updated?.ToString("MMM dd, yyyy")</h5>
                                                    <p>@comment.CommentBody</p>
                                                    <button class="btn btn-dark px-3 btnEdit" data-bs-toggle="modal" data-UserCommentId="@comment.Id" data-bs-target="#EditModal">Edit</button>
                                                }
                                                else
                                                {
                                                    <h5 class="mt-0">Created by @comment.BlogUser.FullName on @comment.Created.ToString("MMM dd, yyyy")</h5>
                                                    <p>@comment.CommentBody</p>
                                                    <button class="btn btn-dark px-3 btnEdit" data-bs-toggle="modal" data-UserCommentId="@comment.Id" data-bs-target="#EditModal">Edit</button>
                                                }

                                                @if (User.IsInRole("Moderator")) //If the user is a moderator, displays the Moderate button on the edit
                                                {
                                                    <button class="btn btn-danger px-3 btnModerate" data-bs-toggle="modal" data-UserCommentId="@comment.Id" data-bs-target="#ModerateModal">Moderate</button>
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                //If the user is not logged in, I will prompt them to login in order to see the create comment form.
                                <a class="btn btn-lg btn-dark btn-block w-100" asp-route-returnUrl="@Url.Action("Details", "BlogPosts", new { slug = Model.Slug }, null, null, "fragComment")" asp-area="Identity" asp-page="/Account/Login">Log In to add a comment</a>
                            }
                            <!-- ./COMMENT FORM -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @*USER'S MODAL*@
    <div class="modal fade" id="EditModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Editing Comment...</h5>
                </div>
                <div class="modal-body">
                    <form asp-controller="Comments" asp-action="Edit">
                        <input type="hidden" id="ModalCommentId" name="CommentId" />
                        <input type="hidden" name="Slug" value="@Model.Slug" />
                        <textarea id="ModalCommentBody" name="Body" rows="5" class="w-100"></textarea>
                        <button class="btn btn-dark w-100" type="submit">Submit</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    @*MODERATOR'S MODAL*@
    <div class="modal fade" id="ModerateModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Moderating Comment...</h5>
                </div>
                <div class="modal-body">
                    <form asp-controller="Comments" asp-action="Moderate">
                        <input type="hidden" id="ModerateModalCommentId" name="CommentId" />
                        <input type="hidden" name="Slug" value="@Model.Slug" />
                        <select name="ModerationType" asp-items="@Html.GetEnumSelectList<ModType>()"></select>
                        <textarea id="ModalModeratedBody" name="ModeratedBody" rows="5" class="w-100"></textarea>
                        <button class="btn btn-danger w-100" type="submit">Submit</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    @section Scripts
{
        <script>
            document.querySelectorAll("button.btnEdit").forEach(btn => {
                btn.addEventListener("click", function () {
                    //Transfer the value of the button's data-UserCommentId to the Modals hidden input
                    document.getElementById("ModalCommentId").value = this.getAttribute('data-UserCommentId');
                    //I need to use JS to get the comment closest to the button i just clicked
                    let closestComment = this.closest(".media-body").querySelector("p").textContent;
                    document.getElementById("ModalCommentBody").textContent = closestComment;
                });
            });
            document.querySelectorAll("button.btnModerate").forEach(btn => {
                btn.addEventListener("click", function () {
                    document.getElementById("ModerateModalCommentId").value = this.getAttribute('data-UserCommentId');
                    let closestComment = this.closest(".media-body").querySelector("p").textContent;
                    document.getElementById("ModalModeratedBody").textContent = closestComment;
                });
            });
        </script>
    }
</section>
<!-- latest post Area End -->